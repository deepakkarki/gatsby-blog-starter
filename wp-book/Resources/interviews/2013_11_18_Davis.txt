Interviewer: So it’s the 18th of November and I’m speaking to Chris Davis. Hello Chris.

Davis: Hi.

Interviewer: Let’s just get started, if you could tell me how you first got into blogging.

Davis: Sure. In college I studied art, fine art specifically, paintings, sculpture, drawings, that sort of thing, and one of the classes I took was digital art. And it was way, you know ’96 or so, and it was still a very young field and we basically just played around in Photoshop for six weeks. But I got hooked on it and decided to go into digital art as my career. That eventually obviously led to having a website and the struggles of maintaining a website in the pre-CMS days. Eventually as well, I’m very opinionated and I enjoy sharing my opinion with people. As well as using the site to advertise my wares, if you will. I also was writing a journal, before we had the blog term, online, and I was rolling everything by hand so HTML, CSS, writing things and then pushing them out with an FTP application and it was a horror. Eventually I started looking around for something that would help automate that, and I ran into b2. And loved the idea of it and installed that in ’99, I think. And used it until the fork happened and WordPress came on the scene. But it was more… I got into blogging because I was lazy. I guess that’s the right answer. Because I wanted to… I feel very passionate about having a voice and that people should have a voice but I’m also fundamentally lazy so I wanted to have a voice that would take the least amount of effort. And so blogging just kind of became the obvious choice for that.

Interviewer: Did you find that they way that you wrote changed at all once it was easier? Once you had b2 instead of having to roll your own.

Davis: Yeah. When I was doing my own, by-hand journal it was long, involved pieces because that was the only way it would be worth doing. And having the immediacy of a blogging engine… being able to just log in and bang out a paragraph or two and be able to hit publish and then go back to whatever I was doing meant that it became a more frequent and much more [3:00] consumable trend. But there were always… the balance was usually 3 or 4 short posts to 1 or 2 long, because I’m still fairly long-winded and I like to have the room to really explore an idea. And I was able to do both, which was really exciting for me. 

Interviewer: Did you get involved with the b2 community?

Davis: I did. Yeah. It was one of those things. I’m the prototypical American male. I wanted to find out what it could do and how I could break it. And so the moment I installed b2, I saw all the things that it did and I saw all the things it did not do. I’m a tinkerer. That’s kind of what I’ve been my whole life. I like to figure out how things work and then see if I can make them do unexpected things. And so I’d never looked at code before, other than, you know, in passing with Perl and things like that. And so I started going on the b2 community site to see what other people were thinking. If there were other people were thinking along the same lines as I was. And found very quickly that there were. A number of people that were more accomplished than I in the hacking area had started doing that. And that’s what set me on the path of being more involved in the entire community aspect of it. 

Interviewer: Did you encounter Mike or Matt on the forums there?

Davis: Mike I did. And a couple of other people that would eventually become more well known in the community. I didn’t encounter Matt until we were firmly in the WordPress era of blogging. We met in the IRC channel as you’re wont to do in that community. And that’s really how we became connected in the beginning.

Interviewer: So did you move to WordPress as soon as it was announced as an official branch? Or did you stick with b2 for a while?

Davis: Oh no. The moment that there was “hey, this is WordPress, it’s shinier and better” I jumped ship. Because it was obvious the… I was in b2 for a little while before WordPress was announced and it was obvious that the steam was running out in the project because Michele was doing other things and it was obvious that there was an end coming. And I had already invested a lot of time in the community as well as in my own experiments with the software that I didn’t want to have it all just be for nothing. And when I saw that WordPress was the official branch and it would have a future, it was an easy decision to move over. [6:00]

Interviewer: There wasn’t any… were people just pleased that it was being forked? Or was there any bad feeling about it?

Davis: No, I think that it was… especially because of how early it was… you know this was still in a time when open source was not the darling child of the internet that it is today. So it was a new kind of thing. And I don’t think there was a lot baggage connected to it. It was this train that we’ve been on has reached it’s last stop, but they’ve taken the cars on that train and given them a new coat of paint and put them on this other track. And so it was more of a shifting as opposed to an ending. So I think people were just excited that this experiment that they had fallen into was going to continue and not just end. That was my experience anyway. 

Interviewer: So in what ways did you start getting involved with WordPress then whenever you kind of made the switch from b2 to WordPress?

Davis: I immediately started hanging out on… there was an early forum that was kind of left over from b2. And so I was still involved in that. But IRC became the place I hung out mostly. Because I like interactive and real-time communication a lot more than forums. Forums get on my nerves. For many reasons. They have a lot of shortcomings. So IRC was a huge draw for me because I could actually… I learned by doing and by breaking and trying to fix things. I don’t learn by reading quite as much. And so the IRC channel became my life preserver, if you will. Because I would go and try to make something happen in WordPress and break it all to pieces. And I would go run to IRC and find people to explain to my why I had done something stupid. And how to fix it. And that became where my journey from being a designer to being a developer happened was just hitting those constraints. Like I really want it to do this, and it doesn’t. And it will eventually, but I’m impatient. And so I just keep banging on it until it works and the IRC channel gave me the ability to have people there to support me and they were… the most important part was the community was so welcoming and was so structured to helping new people feel like they had a place and to be safe to ask stupid questions because I had many of them. And I never felt like that I was viewed as lesser because I came in and said I don’t know how this works. And it might have been something simple for everyone else. But for me and where I was in my journey it was Mt. Everest. It wasn’t just a foothill. [9:00] And so I always felt like it was a safe place to go and to air those things and have them answered in a way that wasn’t hurtful or kind of shaming, I guess.

Interviewer: Do you remember who was particularly helpful?

Davis: Mike Little was. Matt eventually when I started getting to the point where I was getting to the point where I asked questions that piqued his interest. There were some other people like King, Owen Winkler eventually. Like Scott Merrill, Skippy, those guys. We all formed friendships in that because, Owen for instance is an amazing developer and he’s very, he was very open with mentoring and I learned a lot from him during that time. And others as well. It’s kind of hard though, because at the time we were all still hiding behind handles. And so in the IRC channels I was jesuit. So I didn’t really use my name. And many people did not. So it’s difficult to still even to this day to be able to say this person was under this handle actually this person’s name. I’m not even sure who some of those people even were that were very foundational in my experience because they used random handles to obfuscate their identity. So that the one unfortunate aspect of my early time in WordPress was there are people that I owe a great deal to that I can’t thank. 

Interviewer: Did you find yourself then making hacks? I saw you have the Creative Commons hacks. Were they popular?

Davis: Many of them were popular. I attribute that mostly to there weren’t that many hacks. Not that mine were especially good. Because they were not. But people were excited about the possibility of being able to drop something in and change the way WordPress works. And so since I was willing to fall on my face a lot faster than other people were I think… it’s kind of a land grab. I got out quickly, because I didn’t care if it blew up in my face. And since most of it did not, it became something I became known for. But I love teaching. I love helping people. And I love giving people a voice. Especially in the early days of WordPress, all three of those things became within my reach finally. And I was able to access a community much greater than I had ever anticipated. You know we were a worldwide community at that point and more people came on everyday because people were finding out about WordPress and the eventually when the MoveableType scenario happened and they did their license change and there was a mass exodus. [12:00] We had these hundreds of thousands of people now that were looking for help and wanted to know how things worked and how they could work and we were there waiting for them. And that was just very exciting.

Interviewer: Had you been involved with open source before this? 

Davis: No. That was… b2 and WordPress were my first foray into open source. I was not really… because I came from the art world, so I was not privy to that. I didn’t even understand the difference between proprietary software and… it was all just software. It was something I put on my computer and I hoped it worked. And so it was not until I got into WordPress that I found the open source movement and… I mean it was one of the three or four major events of my life that changed who I am as a human being was finding open source software and the movement behind it. 

Interviewer: And did you learn a lot about coding? By being involved?

Davis: Oh yeah, over many years and lots of trial and error and breaking things. But yeah, I did. And it was because… it’s one of those things. I guess not as much as an artist because I have a little bit of… I have enough of the engineering mentality that I see a problem I can’t possibly fix and I try to anyway. I rise to the challenge because I’m not supposed to be able to rise to the challenge. And that was one of the things. I looked at this black box that I couldn’t possibly understand, which made me want to understand it even more. You couple that with a community that was excited about that and encouraged it and… there was little choice that I would become a developer out of that kind of environment with so many people supporting and encouraging you. And because it was open source we were all about sharing with each other what we were doing. That was one of the big differences in the WordPress community, especially in the beginning, is that not only was it open source but we encouraged each other to give what we were doing away to each other as a learning device as well as just for the good of the project and community as a whole. 

Interviewer: So you wrote hacks, I guess, to begin with and then we had the change move to the plugin system. How did that change things for developers? 

Davis: A plugin, a good plugin API means that there’s consistency and predictability in what you’re doing. And so with the hacks it was tenuous and fragile because you would… even a point release of WordPress might destroy [15:00] everything you’ve done… two days ago because there was no guarantee that that crazy thing that you hooked into yesterday that might not have actually supposed to have been there, would be there this time. And so going to an actual plugin API allowed for consistency, predictability, and support because we knew we now have a plugin API. It’s going to be versioned. It’s going to have support over a certain amount of time. And you felt more secure in developing things for it. And that’s not even getting into the fact that the plugin API allows you to do things that you weren’t able to do as a hack to begin with. Because a good plugin API exposes things from the core of the application in a safe enough way that you can do more incredible things. And hacks were kind of this nebulous, bolt-it-on-the-side-and-hope-it-doesn’t-break-anything kind of… it was more of the wild west, you know. The plugin API brought civilization to what we were doing. Which in some sense was kind of a drag to, because you felt like you were a rebel. I was doing crazy things that people didn’t think were possible because there was nothing to tell me I couldn’t do it. And so the plugin API brings order and structure to the chaos, which is good for the longevity of the project but, you know, sometimes a bit of a damper. 

Interviewer: Did you move… did you turn all of your hacks into plugins then?

Davis: I did. I moved all of them that were worth moving. I had a couple that were just silly that I had done more as a proof of concept and just to prove to myself that I could do it, than were actually useful. But like the Creative Commons one that allowed you to put the Creative Commons license on any post you wanted, that became a plugin the day that the point release came out that had the plugin API, I converted every one of my hacks to plugins that day that were useful and people wanted to use. And so I was very much in support of the plugin API and wanted to really get the most out of it.

Interviewer: Do you recall the introduction of the theme system? I heard that that was a little bit more controversial. 

Davis: Yeah, I remember that, because Matt and I had arguments about it. 

Interviewer: Why did you have arguments? Tell me…

Davis: Another thing that I did, it wasn’t a bad argument, it was the… and when I say argument I mean more of a discussion, 

Interviewer: Yeah sure…

Davis: Argument in the academic sense. It was driving me crazy, because I had gone from doing these hacks and plugins to building themes. Because at my core I’m an artist. I like pretty things. I want to look at my website and make it beautiful. [18:00] And so I started doing all this stuff. Building themes and releasing them. And I build a theme for the admin section and released it. And all of these things were picking up steam, but it was so difficult to go from one to the other. There was no system for theming. You just kind of had to drop files in and move them in and out. And it was very cumbersome. It was what it was because it was so early on. But I believe I emailed him or I posted something on my site and said, you know, we need a theming system. We NEED one. And I actually… I released a plugin that was a plugin and a hack together that gave you rudimentary theming capability. Because I wanted it. It was very dumb, and it was very terrible. But it allowed you to easily switch between them based on certain factors. It was very limited but it was the first step in that direction. And he and I had this discussion about what was important going forward. What do the users need the most. And I kept harping on we need some sort of appearance theming system because people are going to want to customize their site and all of that stuff. And so he and I had this back and forth about him… he did not agree that that was a top priority at the time. And I did not agree with him not agreeing. And so, you know, it was nothing terrible, but it was a little argument we had in the “blogosphere” and then eventually he… a couple of releases later is when the theming system kind of landed. 

Interviewer: Did you discuss this on your blog? I’d love to read the discussion. If I can find it.

Davis: I think so. Unfortunately, I don’t have any more comments from that era.

Interviewer: Oh nooooo…

Davis: I might have the posts. Between about five years ago, or six years ago, I was moving from one server to another and the comments table was corrupted beyond repair. But I’ll see if I have it in email, because I can’t remember if it was… all of our discussion was email based or  if some of it was commenting on the blog. But I’ll check and see if… I have some comments that I was able to save, so if I do, I will harvest those and get that to you.

Interviewer: If you have anything that would be great, because I’m really interested to find out what the thought processes were then. Because people now, when you ask them ten years or eight years on, they’re talking with hindsight. So it’s nice to see what people were saying at that time rather than simply what they’re saying now. … People’s memories are very fallible. People don’t remember things as they were. Or you know.

Davis: Exactly. The past becomes shaded by your present. [21:00] Yeah, the other thing to always keep in mind is that that was so early on in the development of WordPress, I’m pretty sure he was right. That we should not be messing with the theming right now. It just irked me because it was what I cared about. 

Interviewer: Of course.

Davis: Which is the open source mantra. You scratch your own itch. I didn’t care about the other stuff he wanted to do because it didn’t affect me. But what affected me was not being able to easily switch between the themes I’d been developing and wanting to test out. And so Matt was taking the 10,000 foot view of the evolution of WordPress, which he began very early on, to his credit, and I was taking the very narrow 50 foot view of what I needed right now. And I think time has borne out that we were both right. And the way it went was the way it should have gone because there were very important things that they put in place that years later were able to be built upon. It’s just funny.

Interviewer: I saw a lot of discussions about whether to use Smarty for the templating system. But in the end I guess they went with this templating system that they created. What did you think about that decision? Were you happy with what they came up with? 

Davis: No, not at all. Ever even. I can’t stand… PHP is a templating language. That’s what it does. It’s… so it bug me because most of the arguments are it’s so much easier, look. And then when you look at the syntax, there are very few differences between the syntax of the templating language that they are putting on top of PHP and the actual native syntax that PHP employs itself. It drives me insane. Because it introduces another level of complexity to the application. It add weight to the application. And it adds overhead. Because natively parsing stuff you have to parse something and parse again, insert things, and you have to process. It just seems like they’re trying to fix a problem that doesn’t exist. But that’s my opinion. I stick with it, but it is just an opinion. 

Interviewer: It’s a valid one to have. What would you prefer that they would have gone with?

Davis: Nothing. Just PHP. Because it just seems like it’s fixing a problem that doesn’t actually exist. Because if you’re going to do templating, you have to learn the template language to begin with. Because they all have their own caveats and their own syntax to follow. And if you’re going to do that anyway, why not have them just learn rudimentary PHP, which is a good thing anyway. 

Interviewer: Isn’t that what they did? [24:00]

Davis: Sort of. Yeah. But it just… but it’s still not straight PHP, so… 

Interviewer: Is that the template tag system and the all of the different files that they’ve got?

Davis: Yeah, exactly. And like the theme system today is like so… just ridiculously complex, that it makes me laugh every time I work with it. Because it just… And you don’t have to go to that extreme, but the two thousand… like the 2013 and 2012 are supposed to be teaching you the right way to do things, that’s their whole point. And showing you the possibilities of what is there and also the way to do things. And they just like seven different files for the loop depending on the content type. I just… just have one file and handle the different content types. And I don’t know. I’m also old school developer. Everything I do is object-oriented, but it bugs me that it feels like you’re doing the same thing in seven different files when you should just do it in one. But again, that’s just methodology and how I want to develop. It has nothing to do with right or wrong. 

Interviewer: So when did you start adopting a more object-oriented approach? 

Davis: When… well, I was going to say when I left WordPress, but that’s not true. Probably a year or two before I left the WordPress community to do something new, I started getting into that because of the job. I was working at a university and we were building a CMS for the university from scratch and since my… I was technically the designer on the team and there was a developer that I was paired with who I was friends with and he was also in the WordPress community at the time. And he came from a Perl background. So everything he wrote in PHP was very Perl-like, which is a good thing. And so I really, under his tutelage if you will, became much more of an object-oriented programmer, just the way I thought about things and how they were built and designed. I don’t have any problem with functional patterns, I just like the object-oriented system. I think it’s cleaner syntaxually. It’s a little easier to understand because of the compartmentalization classing and inheritance and everything makes sense. But it’s one way to solve a problem. There are a thousand ways to solve a problem.

Interviewer: Do you think that was part of the reason that you decided to be a part of Habari? Start, found Habari?

Davis: No. [27:00] Well, that’s not entirely true. There were two big things that went on with Habari. The four of us that decide to start the project we were all, in one way or another, very active in WordPress at the time. And the two big things were the community model, sorry, the community governance model, the project governance model. We wanted to do something different than that. Which was a big one. Also we… WordPress and it’s success is a double-edged sword. Because it’s good that it’s… I mean it’s great that it’s so popular and it does so much and so many people depend on it. But because of those things, it’s really difficult to do something out of left field and really throw caution to the wind and do something amazing because you have to worry about legacy and your millions of users. It just becomes more difficult to one day just decide you want to completely change something and make it better using a new cutting-edge feature that’s in this new version of PHP when you know that 75% of your users will never have that version of PHP. And so we were just… we were all at a conference. Two of us were speaking at the conference and the other two were just there to attend. And we were kind of, you know, commiserating and griping about “oh I’d really love to do this but I can’t because it will never be fully supported and blah, blah, blah.” So eventually we just had this moment where we were like well what would it look like if we started from scratch and had no legacy to worry about. What if the core of our community philosophy was complete inclusion and the core of our development philosophy was push the envelope, embrace all the new features that are cool and not care about legacy. What would it look like if we did those two things and as we talked about it, we became excited and decided to try to see what it would look like. And that’s how Habari came to be. And it’s funny because we were all very… the year that we took to build the first alpha version of Habari, we were all extremely active in WordPress, so we were doing both in parallel. 

Interviewer: I saw that you launched the first Habari blog.

Davis: Yeah, yeah. Again, I’m impatient. 

Interviewer: That’s what Owen said. 

Davis: You know we had the good fortune of having been through the development of WordPress. And so… and other projects. And so when we built Habari [30:00] the first version, when I launched it on my site, it was stable. As stable as anything I’d ever used. Because we weren’t developing blind, if you will. We knew the pitfalls. We knew how things worked and how we wanted them to work. And we knew the feature sets we wanted to develop in the first version. And there was only four of us. So there wasn’t a lot of… we were all of one mind. And there were discussions and arguments, but they were very little because we all had the same goal in mind. And so we just plowed through the first version. And I had been running it locally for two months and had never had an issue and really, really hitting it hard trying to test it. And so I decided one day we had gotten to a certain point and with any project, you have to eat your own dog food as they say. And launching the site on Habari, making my personal site on Habari meant I had to use it every single day. And that’s a really good motivator to fix things that, you know, those bugs I don’t care about because I don’t really use it every day. But when I start seeing it three or four times a day because I was extremely active at that time in blogging, it becomes a new sense, large enough that I just go “fine, I’m going to just fix it right now because I don’t ever want to see it again.” So that’s really why I did it. And I was excited. I was extremely proud of what we were building. And I still am. And I wanted other people to know about it and I felt like we had kept it under wraps long enough. 

Interviewer: So why weren’t you happy with the governance model at WordPress? 

Davis: Well, I’m going to blame it on specific people here. When I was at the university working, building that CMS for universities, the guy that I worked with, Rich Bowen, was a member of the Apache Software Foundation. And I ended up… the first year we were working together, they were having a conference in Germany and I had been to Germany, but not to Stuttgart where it was so I thought it would be funny to put a random talk in and it was selected and I was given the opportunity to go. And I gave my talk and it was terrible, but the people there were amazing. And I got to spend a week with these people that lived and breathed the Apache philosophy, which is meritocracy. And it just really… it resonated with me in a way that few other things have. Because the entire idea is that it doesn’t matter who you are, what you do, what your knowledge base it, or what your skill set is. [33:00] If you do things that are good, the community rewards you. And if you do things that are bad, the community penalizes you. It doesn’t matter who you are. That really… it felt egalitarian and much more democratic in one sense, and it just felt like it’s where I wanted to be and we had just gone through some issues in the WordPress community where a feature had been introduced that a lot of users wanted, and Matt had decided that he didn’t think it was the right time to introduce it, so he reverted the change unilaterally. He didn’t discuss it with anyone. He just decided it was wrong, and so he reverted it. And that’s his choice and his right because he’s the leader of the project, but that didn’t sit well with me because when that many people decide it’s a good thing, you should really, really think about what you’re doing. And even though I know in the years since we broke off to do Habari that things have become much more meritocratic there in WordPress, the end of the day, Matt still has the power to exercise that type of control over the project if he wishes. And no one can countermand him. Because he’s Matt. And I don’t… that worries me. I’m one of the founding fathers, as they call us, of Habari and none of us have… we have like 60 committers now and we all have the same authority. I can’t overrule anyone even though I built the original product. My voice has the same weight as everyone else’s and I think that is a much… for me personally it’s healthier. And I think that, even though our project isn’t as well known and successful as WordPress is, I think it’s been better for us as a community to have that type of level playing field, than had we done, as it’s called, the benevolent dictator model of governance. Like the Linux kernel has that. And a couple of others, and it’s worked really well for them. It’s not a bad model. I just… it didn’t feel right to me. 

Interviewer: Do you remember what feature it was that Matt removed? 

Davis: I do not. We could look it up on Trac though. It was a pretty large outcry on Trac about it. And again, I think… I actually, in hindsight, think he was right to revert it, but I don’t think that the way he chose to do it was the best thing for the community. 

Interviewer: There was the inline documentation discussion, I guess… that was the thing that Rich Bowen remembered particularly. But I’d be interested to see what the feature was. [36:00] I’ll have to have a look on Trac around that time. 

Davis: It might have been the inline documentation, I don’t remember exactly. I just remember the visceral reaction that I had to what happened. And the feeling that it wasn’t… I didn’t want to be a part of the community any more if that’s the way it was going to be.

Interviewer: What was Matt’s reaction to the outpouring? 

Davis: It was a Matt reaction. He listened and he conversed with people and let them have their say and engaged in dialog with them, but it didn’t affect his decision at all. And so, I think that some people felt better because they were able to really air their frustration and have him listen. And then other people felt frustrated because they aired their frustration and had discussions with him and then he was like, okay I was still right, awesome. But again, it was, in the long term, it was the right course because WordPress is still chugging on they have an amazing community still and they have a really good product so I don’t think it was a devastating blow to the community. But it was a moment where I saw that I didn’t, my personal beliefs didn’t align as closely as I thought they did with the community. 

Interviewer: Quite a few prominent people moved from WordPress to Habari. Do you know why that was?

Davis: Well, … this is uncomfortable because I don’t like saying things like this, but some of them moved because I did. Because I had the honor of being well-respected in the community because of the things I said and did. And that meant a lot to me. And I tried not to ever use whatever I’d accrued through whatever it was that I had done negatively. And I did not, with the Habari situation, call people up and tell them to move. But when people saw that I was leaving, and I had been such a… I was extremely vocal in my support and love of WordPress and the community especially. And the things that I’d done, writing tutorials and all this other junk, if I was leaving to go do something else, there were people that felt like it was something they should look at. You add to that people like Skippy, Scott Merrill, and Owen Winkler, and Rich Bowen who is the nicest man on the face of the planet, [39:00] the four of us coming together to build something brand new I think was exciting for some people. And there were some people that, you know, our stated mission was audacious and seemed impossible, to use every new cutting-edge feature and push the envelope and blah, blah, blah, all the very high rhetoric we were spewing at the time, and so people wanted to see what that would look like and be part of doing something completely new. And I think the newness of it just… it was a perfect storm of things, it wasn’t any one thing. But then also, one of the things that I am very proud that we did and that I think we did well, is that we gave everyone an equal voice. And especially in the PMC, the project management committee. And so very early on, our PMC was full of designers and developers. We had a community focused person where all they cared about was that we were treating people well. And we had men and women involved, and we tried to be as inclusive as humanly possible and give everyone equal respect and equal voice. Like we had Sean and a couple of other people who would never code a day in their life. That’s not what they do. But they had commit access the moment they joined the PMC because that’s what you do. You give them access to the source code. It’s theirs now. We did those things immediately, early on. We went from the four of us to, I think, 10 or 15 committers within six months after announcing. I think that, the journey to being the holder of the keys to the source code of WordPress is long. And sometimes arduous. And I think that’s good because they have, as I said before, they have serious skin in the game. If so many users and so much of people’s personal economy is built on WordPress, they don’t want to have any random person to be able to make changes but if you want to be an active voice in the project and you want to make changes and you have ideas, something like what we were doing was very appealing because we didn’t have any of those things to worry about. And I think that was another huge draw was that they got to do some crazy stuff that they just could not ever do in WordPress, for a good reason. And then they knew that if they, two or three months in, they might be given PMC access and voted in because we’re young, and we’re scrappy, and we’re trying to get things going. And it’s very easy to make a name for yourself in those types of projects than it is something like WordPress. [42:00] So I think it was just a lot of things. And I’m sure there were some people that didn’t like one… “I don’t like this and I don’t like this in WordPress” and they saw, like Root, <sigh>

Interviewer: Oh yeah… Root

Davis: Yeah, he came over very quickly and because he thought, I don’t know, that his brand of vitriol would work for us. And it did not. I mean, it did not. We just… we tried to be a respectful community where everyone had the same voice and if you have an opinion, that’s okay. He was very much a supporter until he figured out he would be met with the same disdain in our community that he was in WordPress. And he started being nasty to us and then eventually left. 

Interviewer: Yeah he was pretty nasty to lots of people. 

Davis: Yeah, yeah. I think that was his state of being.

Interviewer: Wow

Davis: Unfortunately. It’s unhealthy and it’s frustrating because every once in a while below all that trash there was a golden nugget of wisdom in what he was saying. But you couldn’t get to it because wading through all of that mire and muck that he was raking wasn’t worth it. That’s sad. 

Interviewer: I guess online communities attract all sorts of people. 

Davis: When you are welcoming and inclusive, you are welcoming and inclusive. 

Interviewer: So tell me, did you… I read a lot of buzz around the time that Habari launched. People were really excited about it. Were you able to keep up momentum? Keep getting people involved with the project? Were people still interested?

Davis: Well, the… yes and no. So we are very much focused on building the best product we can. We are not focused on community numbers or any of that, right now. It’s starting to change because we are getting close to our 1.0 release and at that point there’s a psychological wall people have that if it’s not 1.0 they’re not going to use it. And we’re hitting that, we’re going to break through that wall and at that point want to have a better marketing pitch and all of that. Because we’ve also matured and in our years of development. Because we started off as a simple, bare bones, beautifully designed from a visual standpoint blogging tool. That’s all we wanted to do. Because WordPress was beginning the turn to CMS land and we decided to differentiate we wanted to [45:00] be just a blogging platform that embraces as much advanced everything as we could. And just stick in the niche and be that product. Kind of what Ghost is doing now. That’s what we… it’s funny because I follow Ghost and their entire presentation is the exact same thing we said eight years ago. 

Interviewer: I know. I’ve been following it too and the parallels are really interesting.

Davis: Yeah. And what’s funny is that we were completely 100% sold on that idea until about three or four years ago. And then it did everything we needed it to, and then what do you do at that point. So it was either we’ve hit the end of what we can do with WordPress, because it does every blogging thing you could ever want. Or we start doing more interesting things with it. And that’s what we’ve decided to do. It’s still a simple blogging too. But instead of a CMS, we went the application framework route. You can do crazy things with Habari today that you would not expect, with a couple lines of code because we’ve gone that… like you can roll REST APIs for everything you want with a plugin. And just crazy things, while still being a very tiny, very simple executable because we put everything in plugins. Our plugin architecture is ridiculous. And so in some sense we’ve kept the momentum up because we’ve continually been developing and refining and the things we’re about to bring out are pretty phenomenal, from like form UI, and things like that. But all of the great development that we’ve done has been good, but we haven’t been fostering a lot of users because we’ve been so focused on innovating on a very core level. And so we still have a ton of interest from the developers community because there are people who have built businesses on using Habari. They just don’t tell anyone they’re using it. But you don’t have the mass adoption that you do in WordPress of just regular people using it, because we haven’t gotten to that point yet. And we’ve intentionally taken it slow in some sense because we don’t want to make hasty decisions. Our state goal kind of bites us in the butt every once in a while. 

Interviewer: Why’s that?

Davis: Because we wanted to push the envelope and we wanted to do… like the first release of Habari supported four different database engines. And three our four different templating languages, which I fought against because PHP is a templating language, but I lost. So again, meritocracy in action. So those things are great, but then you have to support all of that stuff. [48:00] Like the Postgres, like supporting the Postgres schema. You have to find someone that like Postgres to do that. And those become battles that you have to fight because you’ve… you’re kind of in this Catch-22 that you don’t feel like you should let those things go because your stated mission is to do these awesome things. And hell or high water, we’re going to do them. And so it becomes this balancing act of do we support this feature even though there’s no champion for it any more. Or do we cull it from the core and put our time and energy into something else. And so it’s that kind of… we have that kind of constant struggle, which is good. But it means we have to take things a little slower some times.

Interviewer: I wanted to ask you about Shuttle. Could you tell me about the Shuttle project and your involvement in it?

Davis: I can. It’s the biggest sore point with me and WordPress. So, the… there were four or five of us that were asked to take on the assignment of re-imagining what the admin area of WordPress could look like. Taking it… Like I said earlier, I had done the admin theme that people liked and had made a name for myself as being a themed as well as plunking around with code. And I had become friends with some other people like, Khaled Oloalpha, and Michael Heilemann, and Brian Veloso, and some other guys. We all became fast friends. And so it made sense that we all kind of had the same ideas of what we would love WordPress to do. And I had a background in classical art, so I understand color theory and all of those things. So being able to go in there and really say, clean slate, let’s pick the right colors and how do we manage the massive amount of information that’s available in WordPress and we knew it was only going to get more dense with information as time went on. And so we really slaved over it and put a ton of work into it and gave it to the people on high and they said thank you very much and changed a couple of colors to what we wanted and then hired Happy Cog to do the rest. So. That did not sit well with me. Very frustrating to do that much work on something you love, for free, and then have it, not discounted, but they went those colors are cool and so they made their way into the admin and some other [51:00] things we did, very small things. But the majority of the serious work we did with UX and UI were kind of abandoned and they just hired Happy Cog. It wasn’t immediate. I don’t want to make it seem as though they said this is awesome and they gave it to Happy Cog and then they did something. But it just seemed… it was frustrating to do that much work and have almost none of it see the light of day. And [inaudible] you know. 

Interviewer: Whenever you set out on the project did you have the impression that what you produced would end up in WordPress? 

Davis: Personally, I had the impression that we were creating sketches and kind of a visual toolkit that would inform the design. I had no illusions that what we delivered would be 100% show up in WordPress, but I had the illusion that more of it would. And that what we said and what we did would have more weight than it did. Because that was the big thing. I don’t… I expect when I’m asked to do something and I put as much time and energy as I did into something like Shuttle, that what I deliver and the very detailed and well thought out presentations that we gave would be accepted with a bit more weight than they were. Because we weren’t paid to do it. We were asked to do it and we did it happily because we loved the community and we thought we could really help make things better. And to have it… it felt like it was dismissed. Let me put it that way. I don’t necessarily think it might it might have been but the effect that those of us got, especially Khaled and I, we just felt like they cherry-picked a couple of things they liked and the rest of it was just summarily dismissed. And that was not the best feeling in the world to have.

Interviewer: You guys spent quite a long time working on it it seemed, about 18 months? 

Davis: Yeah, give or take.

Interviewer: How come progress was so slow?

Davis: Ah, it’s a really… well, when there were five or six guys who all are very opinionated and artist-y there’s a lot of conversations that happen. And, well a couple of things, we were not given a timeline. We were not given a sense of urgency that it needed to be done any quicker than that. And we felt as though if we are going to do this we need to do it right. And if we deliver a product it needs to be the best it can be and have… if it is accepted by the community, it needs to put WordPress on the best footing it can be put on for the next 50 years of growth. [54:00] And that’s not a quick process. And so that’s kind of… and we were all working full time and, you know, still working on our own WordPress things apart from Shuttle. And so it just became something that was more drawn out than we would have liked but we were never given, we never had Matt or someone in the leadership of WordPress go you should really move faster guys. We never had that prompting our we would have put more pedal to the metal as they say. But we just never got that feeling that we needed to speed up. We wanted to take the time necessary to do something that we were all proud of. 

Interviewer: So the discussions happened on a private mailing list. How did that go down in the rest of the community?

Davis: There were some people that were upset by it and many people that didn’t care. I have found that with those types of items that are lightning rods, you have an extremely small but vocal group that either love it or hate it and they make it known and the majority of people just don’t care. I don’t disagree that it’s not the best scenario but you can not design by committee. It doesn’t work. And that’s what the people who were upset by the private mailing list wanted more of a design by committee. They thought that they should have the same say in the design as we did, which I don’t necessarily disagree with. But if we wanted it to be done and be cohesive, there needed to be a smaller pool of people. A mailing list like that would become so much noise and so little signal so quickly that there would be no way we could move forward. 

Interviewer: Weren’t you designing by committee anyway? I mean there were five or six of you?

Davis: Sort of, but… Yes, but we all had specialities and we all kind of played to our strengths. I was very much involved in color and design of data, because those are the things I care about, and Khaled was involved in kind of the logo aspects and use of white space and negative space and things like that and Michael had his own stuff and so we complemented each other. And we respected and knew each other well enough to give and take where it was necessary. So it ended up being a really effective team and the other thing that was… might not be publicly known, is that there were five or six of us but there were only really three or four of us, [57:00] sometimes only two of us, working on it at any given time because people would have to come and go as their responsibilities in their personal lives or in their work would go up or down. And so its not as if you had six of us constantly working on this one thing. You would have, you know, Michael and I would be working on it and Bryan and Khaled would be working on it and they would just go organically like us, people had time but we would all be involved in reading the mailing list and giving feedback when it was requested but real down and dirty work, you would only have three or four people, or two people, doing it at any given time. And the… you needed that many people to keep the ball going down the field. 

Interviewer: Did you ever get to the point of coding anything? Or did it just remain in the region of mockups and designs? 

Davis: If memory serves, we did build the dashboard in HTML, CSS, and PHP. So you could drop it in to a WordPress install. Because you can’t really… user interaction cannot be designed unless you’re actually interacting with it. And so to test those ideas we needed to actually use them. And I’m really bad about that. I don’t… I like designing in the browser. And so half the time when I’m coming up with an idea to show the rest of the guys I would design in in PHP and HTML and CSS. It was horrible. Sometimes I would take pictures of it and put JPGs in because that’s how everyone else was sharing their stuff, when I could have just put it on somewhere and give them a link, but it was defeatist in the end, doing all of that work in the browser and then taking a snapshot of it and putting it online. But we had a couple of things that were built. Nothing… I think the dashboard was fully realized, but the rest of it we had bits and pieces because we wanted to test. But we got to a point where everything was kind of, the language was down, we were ready to really do something and we wanted to present it to the community and to the project and we did that before we really got deep into working code. Which ended up being a wise thing because that was kind of the shelf life of Shuttle was there. And so it would have been even worse to have built working things that would have not have been used. So it ended up being good in the long run. But yeah.

Interviewer: So that ended about April / May 2006? May / June? That was about the time that you would have had [60:00] the Habari conversation.

Davis: Yeah it was in that general time. Like 2005 I got to co-author a book with Michael Heilemann on… and we did some cool stuff. 2006 was about the year I started having my doubts about my fit in the community. I didn’t want to be part of the community that I couldn’t make healthier. And I didn’t want to become someone like Root that tears down good people for no reason. And so that kind of got me thinking about things. And that was kind of subconsciously rolling around in the back of my head. So when we had the discussion at Ohio Linux Fest was where it happened, when we had that discussion a lot of things crystallized for me. Let’s see, that was about the 2006, 2007 time frame was when we really started looking at possibly doing something else and making a, hopefully graceful, exit from the community. 

Interviewer: Tell me, did the setting up of Automattic and WordPress.com… what sort of impact did that have on the community?

Davis: The WordPress community?

Interviewer: Yeah, on the open source community.

Davis: I think that WordPress.com is a great thing. And I think Automattic is an awesome thing. They do… you, because you are part of that. You guys do really cool things and have stepped in and protected and uplifted projects that needed it and were able to do great things with them. So I am thankful that Automattic exists and it’s the umbrella that it is with all the other projects. But it’s seems… I do worry about the conflict of interest of Automattic running a for-profit arm and being the lead shepherd if you will of the open source project. And so I think that that was an obvious concern raised by the community, and it think it was a good one. I think they should raise those concerns. Because the community is who owns the project. They need to have ownership of it or you have a dead community. So I think they should be raising those things because they love WordPress and they care about it. And thus far it hasn’t been a bad thing. But it’s always in the back of your head. You have investors in Automattic and you have WordPress.com and it’s a balancing act to make sure that negative things aren’t introduced into the community because of the influence of the business. [63:00] And so I think that was the big thing. But then WordPress.com did so many good things for the community and Automattic existing did so many amazing things. And, you know, Automattic has been very intentional about being open and transparent and building things for WordPress, the .org side, that would not have been possible without the funding that Automattic generates. And so it’s been interesting to watch. I still am concerned. Because even though I’m not… I still work with WordPress and all that even though I’m not active in the community any more, but it still means a lot to me and I still care about it and I still care about the people there. And so I keep tabs on what’s going on. And so, you know, it’s always that little worry in the back that, you know, one of them is that Matt’s not always going to be… he’s going to retire at some point. And what happens when someone else has leadership of Automattic and they still have this, whether used or unused, they have this yoke of power that extends into the .org side because of their relationship and … they just, that stuff, because I care about what happens to the people involved. That does tend to worry me a little bit. But it has not been an issue thus far. 

Interviewer: Yeah. I mean, I don’t work for Automattic. So you can sleep better…

Davis: I thought you worked for the [inaudible] investment.

Interviewer: Yes. I work for Audrey. So I mean we’re pretty much… we really don’t have much to do with Automattic. All we do is work on the open source project. 

Davis: OK. For some reason I thought that it was under the umbrella of Automattic. 

Interviewer: No. No.

Davis: So I apologize.

Interviewer: No, no, that’s okay. I get told that I work at Automattic all the time. But I just find it interesting that Audrey was set up because we are all just working on the open source project and don’t have anything to do with the commercial side of things. And I sometimes wonder if that was part of Matt’s reasoning for doing that was because, precisely because of these concerns. 

Davis: No, that’s awesome. If… again, he’s an incredibly smart guy, so it would not surprise me if that was the impetus for it, what was going on. 

Interviewer: Well, I’ve taken up an hour of your time. Thank you very much for speaking to me. 

Davis: Of course.

Interviewer: If you have of those emails about, that you had about the discussions about the theme system…